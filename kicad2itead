#!/bin/sh
# kicad2itead: Renames the Gerber files generated by KiCad to meet the naming
# convention required by iTead Studio PCB service.
#
# Usage: kicad2itead project_name
# project name is the substring common to all generated Gerber files.
#
# Note: This script works only for two layer PCBs, but could be easily
# extended for 4-layer boards.
#
# JesÃºs Alonso (doragasu), 2015

# Color definitions for the command line
RED='\033[1;31m'
GREEN='\033[1;32m'
NEUTRAL='\033[0m'

# Original Gerber files, as KiCad names them
ORG_FILES="-F.Cu.gbr -B.Cu.gbr -F.Mask.gbr -B.Mask.gbr -F.SilkS.gbr -B.SilkS.gbr -Edge.Cuts.gbr .drl -NPTH.drl"
# Destination Gerber files, as required by iTead Studio
DST_FILES=".GTL .GBL .GTS .GBS .GTO .GBO .GKO .TXT -NPTH.TXT"
# Description of each Gerber file
DESCRIPTS="TOP COPPER LAYER\tBOTTOM COPPER LAYER\tTOP SOLDERMASK LAYER\tBOTTOM SOLDERMASK LAYER\tTOP SILKSCREEN LAYER\tBOTTOM SILKSCREEN LAYER\tBOARD OUTLINE\tNC DRILL\tNC DRILL (NON PLATED)"
# Variable used for indexing
IDX=1
# List of the files that will be added to the ZIP archive.
ZIP_FILES=""

# Renames the ending of a gerber file (if found) and prints the result. Parameters:
# - $1: Base name of the file to rename.
# - $2: Ending of the file to rename.
# - $3: New ending of the file.
# - $4: Description of the file.
# ZIP_FILES global variable is updated with the list of the renamed files.
RenameGerber()
{
	if [ -w "$1""$2" ]
	then
		mv "$1""$2" "$1""$3"
		echo -e "$GREEN""$4: $1$3""$NEUTRAL"
		ZIP_FILES=`echo "$ZIP_FILES $1$3"`
	else
		echo -e "$RED""$4 NOT FOUND!""$NEUTRAL"
	fi
}

# Check command line for project name
if [ $# -ne 1 ]
then
	>&2 echo `basename $0` project_name
	exit 1
fi

# Search and rename each Gerber file
for ORG_FILE in $ORG_FILES
do
	DST_FILE=`echo $DST_FILES | cut -d' ' -f$IDX`
	DESCRIPT=`echo -e $DESCRIPTS | cut -f$IDX`
	RenameGerber "$1" $ORG_FILE $DST_FILE "$DESCRIPT"
	IDX=`expr $IDX + 1`
done

# ZIP resulting files, or error if there are no files to zip.
if [ -n "$ZIP_FILES" ]
then
	echo -e "\nCREATING ARCHIVE $1.zip:"
	zip -9 "$1".zip $ZIP_FILES
	echo -e "$GREEN"DONE!"$NEUTRAL"
else
	>&2 echo -e "\n$RED"NO FILES FOUND, ARCHIVE NOT CREATED"$NEUTRAL"
	exit 2
fi

# Exit without error
exit 0
